services:
  traefik:
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.https.http.tls.certResolver=le"
      - "--certificatesresolvers.le.acme.tlschallenge=true"
      - "--certificatesresolvers.le.acme.email=you@mail.net"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./opt/traefik/letsencrypt:/letsencrypt
    container_name: ${PROJECT_NAME}_traefik
  nginx:
    image: nginx:latest
    volumes:
      - ./:/var/www/
      - ./_docker/nginx/conf.d/:/etc/nginx/conf.d
      - ./_docker/ssl:/etc/nginx/certs
    depends_on:
      - app
    container_name: ${PROJECT_NAME}_nginx
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`${PROJECT_NAME}.localhost`)"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
  app:
    build:
      context: .
      dockerfile: _docker/app/Dockerfile
    volumes:
      - ./:/var/www/
    depends_on:
      - db
    container_name: ${PROJECT_NAME}_app

  db:
    image: mariadb:10.4.10
    restart: always
    volumes:
      - ./tmp/db:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - 8101:3306
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci --bind-address=0.0.0.0
    container_name: ${PROJECT_NAME}_db

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8090:80
    environment:
      - PMA_ARBITRARY=1
    container_name: ${PROJECT_NAME}_phpmyadmin
  mailhog:
      image: mailhog/mailhog
      ports:
          - "8025:8025" # view
          - "1025:1025" # SMTP
      container_name: ${PROJECT_NAME}_mailhog
networks:
  default:
    name: ${NETWORK_NAME}_proxynet
    external: true
